{"version":3,"sources":["main.js"],"names":["clearBoard","cb","Grid","cells","Game","stats","generation","y","board","rows","x","cols","push","Cell","create","addShape","pattern","initShape","xOffset","yOffset","i","length","change","rules","events","dragging","passedCellX","passedCellY","cellW","cellH","$canvas","$","$start","$stop","$onestep","$gencounter","$tumbler","$glider","$glidergun","$ten","canvas","document","getElementById","width","height","ctx","getContext","on","buttonHandler","Start","Stop","step","render","autoStep","setInterval","intCB","attr","addClass","removeAttr","removeClass","clearInterval","newGeneration","newBoys","forEach","cell","nextState","alive","n","neighboursAlive","html","newGen","findCell","theCell","undefined","nbz","nbzAlive","cellsRendered","fillStyle","styles","dead","cellX","Math","floor","cellY","strokeStyle","fillRect","strokeRect","console","log","renderThese","randomColor","c","random","toString","theseCellsRendered","passedCellArray","state","newCell","Object","this","neighbours","action","possibleNeighbours","mousedown","targX","event","clientX","window","scrollX","offsetLeft","targY","clientY","scrollY","offsetTop","mouseup","mousemove","addEventListener","preventDefault","Shapes","glider","glidergun","tumbler","ten","siblings"],"mappings":"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","file":"main.js","sourcesContent":["/* todo:\r\ndifferent render functions for:\r\n\tjust selected/dragged cells\r\n\tentire board\r\nmore DRYing up:\r\n\tbuttons n button handlers\r\n\tchangecell stuff\r\n\tgame logic\r\nlink board size, cell size and # properly\r\nstyles\r\nxXxxXxtra features: colors, rules\r\n*/\r\n\r\n// game obj data\r\nvar Game = {\r\n\tstats: {\r\n\t\tgeneration: 0\r\n\t},\r\n\trules: {},\r\n\tevents: {\r\n\t\tdragging: false,\r\n\t\tpassedCellX: 0,\r\n\t\tpassedCellY: 0\r\n\t},\r\n\tboard: {\r\n\t\tcols: 80,\r\n\t\trows: 50,\r\n\t\tcellW: 10,\r\n\t\tcellH: 10\r\n\t}\r\n};\r\n\r\n// DOM cache\r\nvar $canvas = $('#game');\r\n\r\nvar $start = $('#start');\r\nvar $stop = $('#stop');\r\nvar $onestep = $('#onestep');\r\nvar $gencounter = $(\"#gencounter\");\r\n\r\nvar $tumbler = $(\"#tumbler\");\r\nvar $glider = $(\"#glider\");\r\nvar $glidergun = $(\"#glidergun\");\r\nvar $ten = $(\"#ten\");\r\n\r\n// canvas dommerino\r\nvar canvas = document.getElementById('game');\r\ncanvas.width = Game.board.cols * Game.board.cellW;\r\ncanvas.height = Game.board.rows * Game.board.cellH;\r\nvar ctx = canvas.getContext('2d');\r\n\r\n// controls click handlers\r\n$start.on('click', function() {\r\n\tbuttonHandler.Start();\r\n});\r\n$stop.on('click', function() {\r\n\tbuttonHandler.Stop();\r\n});\r\n\r\n$onestep.on('click', function() {\r\n\tGrid.step(Grid.render);\r\n});\r\n\r\nvar buttonHandler = (function() {\r\n\tvar autoStep;\r\n\tfunction Start() {\r\n\t\tautoStep = setInterval(intCB, 150);\r\n\t\t$start.attr(\"disabled\", \"disabled\");\r\n\t\t$start.addClass(\"selected\");\r\n\t\t$stop.removeAttr(\"disabled\", \"disabled\");\r\n\t\t$stop.removeClass(\"selected\");\r\n\t}\r\n\tfunction Stop() {\r\n\t\tclearInterval(autoStep);\r\n\t\t$stop.attr(\"disabled\", \"disabled\");\r\n\t\t$stop.addClass(\"selected\");\r\n\t\t$start.removeAttr(\"disabled\", \"disabled\");\r\n\t\t$start.removeClass(\"selected\");\r\n\t}\r\n\tfunction intCB() {\r\n\t\tGrid.step(Grid.render);\r\n\t}\r\n\treturn {\r\n\t\tStart: Start,\r\n\t\tStop: Stop\r\n\t};\r\n})();\r\n\r\n// gridderino\r\nvar Grid = {\r\n\tcells: [],\r\n\t// switch out array to new states\r\n\tnewGeneration: function() {\r\n\t\tvar oldBoys = Grid.cells;\r\n\t\tvar newBoys = [];\r\n\t\tGrid.cells.forEach( function ( cell ) {\r\n\t\t\tvar nextState = cell.alive;\r\n\t\t\tvar n = Grid.neighboursAlive(cell.x, cell.y);\r\n\t\t\t// starved/lonely :(\r\n\t\t\tif ((cell.alive === 1) && (n < 2)) {\r\n\t\t\t\tnextState = 0;\r\n\t\t\t// overpop\r\n\t\t\t} else if ((cell.alive === 1) && (n > 3)) {\r\n\t\t\t\tnextState = 0;\r\n\t\t\t// reproduction\r\n\t\t\t} else if ((cell.alive === 0) && (n === 3)) {\r\n\t\t\t\tnextState = 1;\r\n\t\t\t// nothing / stasis\r\n\t\t\t} else {\r\n\t\t\t\tnextState = cell.alive;\r\n\t\t\t\t// age++?\r\n\t\t\t}\r\n\t\t\tnewBoys.push(Cell.create(cell.x,cell.y,nextState));\r\n\t\t});\r\n\t\treturn newBoys;\r\n\t},\r\n\t// step one generation further\r\n\tstep: function(cb) {\r\n\t\tGame.stats.generation++;\r\n\t\t$gencounter.html(Game.stats.generation);\r\n\t\tvar newGen = Grid.newGeneration();\r\n\t\tGrid.cells = newGen;\r\n\t\tif (cb && typeof(cb) === \"function\") {\r\n\t\t\tcb();\r\n\t\t}\r\n\t},\r\n\t// retrieve cell at coords from Grid.cells array\r\n\tfindCell: function(x, y) {\r\n\t\t// simulate toroidal array wrapping\r\n\t\tx = (Game.board.cols + x) % Game.board.cols;\r\n\t\ty = (Game.board.rows + y) % Game.board.rows;\r\n\t\tvar theCell = Grid.cells[Game.board.cols * y + x];\r\n\t\tif (theCell !== undefined) {\r\n\t\t\treturn theCell;\r\n\t\t}\r\n\t},\r\n\t// get number of alive neighbours. could use a redo\r\n\tneighboursAlive: function (x, y) {\r\n\t\tvar nbz = [\r\n\t\tGrid.findCell(x-1, y-1),\r\n\t\tGrid.findCell(x, y-1),\r\n\t\tGrid.findCell(x+1, y-1),\r\n\t\tGrid.findCell(x+1, y),\r\n\t\tGrid.findCell(x+1, y+1),\r\n\t\tGrid.findCell(x, y+1),\r\n\t\tGrid.findCell(x-1, y+1),\r\n\t\tGrid.findCell(x-1, y)\r\n\t\t];\r\n\t\tvar nbzAlive = 0;\r\n\t\tfor (i = 0; i < nbz.length; i++) {\r\n\t\t\tif ((nbz[i] !== undefined) && (nbz[i].alive === 1)) {\r\n\t\t\t\tnbzAlive++;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn nbzAlive;\r\n\t},\r\n\t// re-render each cell in the grid based on state\r\n\trender: function() {\r\n\t\tvar cellsRendered = 0;\r\n\t\tfunction randomColor() {\r\n\t\t  function c() {\r\n\t\t    return Math.floor(Math.random()*256).toString(16);\r\n\t\t  }\r\n\t\t  return \"#\"+c()+c()+c();\r\n\t\t}\r\n\t\tGrid.cells.forEach( function ( cell ) {\r\n\t\t\tcellsRendered++;\r\n\t\t\tif (cell.alive) {\r\n\t\t\t\tctx.fillStyle = Cell.styles.alive;\r\n\t\t\t} else {\r\n\t\t\t\tctx.fillStyle = Cell.styles.dead;\r\n\t\t\t}\r\n\t\t\t var cellX = (((Math.floor(cell.x)) / 10) * 100);\r\n\t\t\t var cellY = (((Math.floor(cell.y)) / 10) * 100);\r\n\t\t\t ctx.strokeStyle = '#EEEEEE';\r\n\t\t\t //ctx.lineWidth = 0;\r\n\t\t\t ctx.fillRect(cellX, cellY, Game.board.cellW, Game.board.cellH);\r\n\t\t\t ctx.strokeRect(cellX, cellY, Game.board.cellW, Game.board.cellH);\r\n\t\t});\r\n\t\tconsole.log(cellsRendered + \" cells rendered\");\r\n\t},\r\n\trenderThese: function() {\r\n\t\tvar theseCellsRendered = 0;\r\n\t\tfunction randomColor() {\r\n\t\t\tfunction c() {\r\n\t\t\t\treturn Math.floor(Math.random()*256).toString(16);\r\n\t\t\t}\r\n\t\t\treturn \"#\"+c()+c()+c();\r\n\t\t}\r\n\t\t// render an array of cells only eg during drag\r\n\t\tpassedCellArray.forEach( function ( cell ) {\r\n\t\t\ttheseCellsRendered++;\r\n\t\t\tif (cell.alive) {\r\n\t\t\t\tctx.fillStyle = randomColor();\r\n\t\t\t} else {\r\n\t\t\t\tctx.fillStyle = Cell.styles.dead;\r\n\t\t\t}\r\n\t\t\t var cellX = (((Math.floor(cell.x)) / 10) * 100);\r\n\t\t\t var cellY = (((Math.floor(cell.y)) / 10) * 100);\r\n\t\t\t ctx.strokeStyle = '#EEEEEE';\r\n\t\t\t //ctx.lineWidth = 0;\r\n\t\t\t ctx.fillRect(cellX, cellY, Game.board.cellW, Game.board.cellH);\r\n\t\t\t ctx.strokeRect(cellX, cellY, Game.board.cellW, Game.board.cellH);\r\n\t\t});\r\n\t\tconsole.log(theseCellsRendered + \" these cells rendred\");\r\n\t}\r\n\r\n};\r\n\r\n// cellerino\r\nvar Cell = {\r\n\tstyles: {\r\n\t\tdead: '#F5F5F5',\r\n\t\talive: '#263238'\r\n\t},\r\n\tcreate: function(x, y, state) {\r\n\t\tvar newCell = Object.create(this);\r\n\t\tnewCell.x = x;\r\n\t\tnewCell.y = y;\r\n\t\t//newCell.age = 0;\r\n\t\tnewCell.alive = state;\r\n\t\tnewCell.nextState = undefined;\r\n\t\tnewCell.neighbours = 0;\r\n\t\treturn newCell;\r\n\t},\r\n\t// change state of cell 0->1 or 1->0\r\n\tchange: function(x, y, action) {\r\n\t\tvar c = Grid.findCell(x, y);\r\n\t\tif (action === 0) {\r\n\t\t\tc.alive = 0;\r\n\t\t}\r\n\t\tif (action === 1) {\r\n\t\t\tc.alive = 1;\r\n\t\t}\r\n\t},\r\n\tx: 0,\r\n\ty: 0,\r\n\t// change to states['alive','dead'] prob\r\n\talive: 0,\r\n\t//neighbours: 0,\r\n\tpossibleNeighbours: [\r\n\t\t[this.x-1, this.y-1],\r\n\t\t[this.x, this.y-1],\r\n\t\t[this.x+1, this.y-1],\r\n\t\t[this.x+1, this.y],\r\n\t\t[this.x+1, this.y+1],\r\n\t\t[this.x, this.y+1],\r\n\t\t[this.x-1, this.y+1],\r\n\t\t[this.x-1, this.y]\r\n\t\t],\r\n\t//age: 0,\r\n};\r\n\r\n// random 0-1 function if needed for init / debug\r\n// function randomInt(min, max) {\r\n//   return Math.floor(Math.random() * (max - min + 1)) + min;\r\n// }\r\n\r\n// kill all cells, re-render\r\nfunction clearBoard(cb) {\r\n\tGrid.cells = [];\r\n\tGame.stats.generation = 0;\r\n\tfor (y = 0; y < Game.board.rows; y++) {\r\n\t\tfor (x = 0; x < Game.board.cols; x++) {\r\n\t\t\tGrid.cells.push(Cell.create(x,y,0));\r\n\t\t}\r\n\t}\r\n\tif (cb && typeof(cb) === \"function\") {\r\n\t\tcb();\r\n\t}\r\n}\r\nvar passedCellArray = [];\r\n// cell events\r\n$canvas.mousedown(function() {\r\n\tGame.events.dragging = true;\r\n\tvar targX = Math.floor(((event.clientX + window.scrollX) - canvas.offsetLeft) / 10);\r\n\tvar targY = Math.floor(((event.clientY + window.scrollY) - canvas.offsetTop) / 10);\r\n\tvar c = Grid.findCell(targX, targY);\r\n\tGame.events.passedCellX = c.x;\r\n\tGame.events.passedCellY = c.y;\r\n\tif (c.alive) {\r\n\t\tCell.change(targX, targY, 0);\r\n\t} else {\r\n\t\tCell.change(targX, targY, 1);\r\n\t}\r\n\tGrid.render();\r\n})\r\n.mouseup(function() {\r\n\tGame.events.dragging = false;\r\n})\r\n.mousemove(function() {\r\n\tif (Game.events.dragging === false) return;\r\n\tvar targX = Math.floor(((event.clientX + window.scrollX) - canvas.offsetLeft) / 10);\r\n\tvar targY = Math.floor(((event.clientY + window.scrollY) - canvas.offsetTop) / 10);\r\n\tvar c = Grid.findCell(targX, targY);\r\n\tif ((c.x !== Game.events.passedCellX || c.y !== Game.events.passedCellY)) {\r\n\t\tpassedCellArray.push(c);\r\n\t\tif (c.alive) {\r\n\t\t\tCell.change(targX, targY, 0);\r\n\t\t\tGrid.renderThese();\r\n\t\t} else {\r\n\t\t\tCell.change(targX, targY, 1);\r\n\t\t\tGrid.renderThese();\r\n\t\t}\r\n\t\tGame.events.passedCellX = c.x;\r\n\t\tGame.events.passedCellY = c.y;\r\n\t\tconsole.log(passedCellArray);\r\n\t}\r\n\t// console.log(\"moving through \" + Game.events.passedCellX + '-' + Game.events.passedCellY);\r\n\t// console.log( c.x + \"-\" + c.y);\r\n});\r\n// prevent weird behaviour when dragged outside window\r\n$(window).mouseup(function() {\r\n\tGame.events.dragging = false;\r\n\tpassedCellArray = [];\r\n});\r\n\r\n// debug info on rightclick\r\ncanvas.addEventListener(\"contextmenu\", function(event){\r\n\tevent.preventDefault();\r\n\t//console.log(\"nbz: \" + Grid.neighboursAlive(targX, targY));\r\n\t//console.log(Grid.findCell(targX, targY));\r\n});\r\n\r\n// preset shapes\r\nvar Shapes = {\r\n\tglider : [\r\n\t\t[2,1],[3,2],[3,3],[2,3],[1,3]\r\n\t],\r\n\tglidergun : [\r\n\t\t[24, 0], [22, 1], [24, 1], [12, 2], [13, 2],\r\n\t\t[20, 2], [21, 2], [34, 2], [35, 2], [11, 3],\r\n\t\t[15, 3], [20, 3], [21, 3], [34, 3], [35, 3],\r\n\t\t[0, 4], [1, 4], [10, 4], [16, 4], [20, 4],\r\n\t\t[21, 4], [0, 5], [1, 5], [10, 5], [14, 5],\r\n\t\t[16, 5], [17, 5], [22, 5], [24, 5], [10, 6],\r\n\t\t[16, 6], [24, 6], [11, 7], [15, 7], [12, 8],\r\n\t\t[13, 8]\r\n\t],\r\n\ttumbler : [\r\n\t\t[0,3], [0,4], [0,5], [1,0], [1,1], [1,5], [2,0], [2,1], [2,2], [2,3], [2,4], [4,0], [4,1], [4,2], [4,3], [4,4], [5,0], [5,1], [5,5], [6,3], [6,4], [6,5]\r\n\t],\r\n\tten : [\r\n\t\t[0,0],[1,0],[2,0],[3,0],[4,0],[5,0],[6,0],[7,0],[8,0],[9,0],\r\n\t]\r\n};\r\n\r\n// shapes click handlers (req DRY de-shite-ening, add into button module etc)\r\n$('.shapes button').on('click', function() {\r\n\t$(this).attr(\"disabled\",\"disabled\");\r\n\t$(this).siblings().removeAttr(\"disabled\",\"disabled\");\r\n\t$(this).addClass(\"selected\");\r\n\t$(this).siblings().removeClass(\"selected\");\r\n\tclearBoard();\r\n});\r\n\r\n$glider.on('click', function() {\r\n\taddShape(Shapes.glider, Grid.render);\r\n});\r\n\r\n$tumbler.on('click', function() {\r\n\taddShape(Shapes.tumbler, Grid.render);\r\n});\r\n\r\n$ten.on('click', function() {\r\n\taddShape(Shapes.ten, Grid.render);\r\n});\r\n\r\n$glidergun.on('click', function() {\r\n\taddShape(Shapes.glidergun, Grid.render);\r\n});\r\n\r\nfunction addShape(pattern, cb) {\r\n\tvar initShape = pattern || [];\r\n\tvar xOffset = Game.board.cols / 2;\r\n\tvar yOffset = Game.board.rows / 2;\r\n\tfor (var i = 0; i < initShape.length; i++) {\r\n\t\tCell.change((initShape[i][0] + xOffset),(initShape[i][1] + yOffset), 1);\r\n\t}\r\n\tif (cb && typeof(cb) === \"function\") {\r\n\t\t\t cb();\r\n\t }\r\n}\r\n\r\n// call initial state\r\n(function()\t{\r\n\tclearBoard();\r\n\taddShape(Shapes.glidergun, Grid.render);\r\n\t$glidergun.attr(\"disabled\",\"disabled\");\r\n\t$glidergun.addClass(\"selected\");\r\n\tbuttonHandler.Stop();\r\n})();\r\n"],"sourceRoot":"/source/"}